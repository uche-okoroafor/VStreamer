{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\routes\\\\UploadVideosPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Context/StateContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadVideos() {\n  _s();\n\n  const [tempSource, setTempSource] = useState(\"\");\n  const [displayVideo, setDisplayVideo] = useState(\"\");\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = \"display:none\"; // https://www.youtube.com/embed/8YhAFBOSk1U\n\n  function getTemporaryUrl(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    switch (name) {\n      case \"videoUrl\":\n        setTempSource(value); // if(value.includes(\"youtube\")){\n        // setDisplayYouTubeVideo(\"display:block\")\n        // setDisplayVideo(\"display:none\")\n        // }else{\n        // setDisplayYouTubeVideo(\"display:none\")\n        // setDisplayVideo(\"display:block\")\n        // }\n\n        break;\n\n      case \"fileUpload\":\n        setTempSource(URL.createObjectURL(files[0]));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleUpLoadVideo() {} //   </div>\n  // </div>\n  // <input\n  //   type=\"file\"\n  //   name=\"fileUpload\"\n  //   accept=\"video/mp4\"\n  //   ref=\"filesUploadVideo\"\n  //   @change=\"localFiles\"\n  //   v-show=\"false\"\n  // />\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3 my-3   videoUpload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpLoadVideo,\n        children: [tempSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              displayVideo\n            },\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              width: \"500\",\n              heigth: \"100\",\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: tempSource,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                src: tempSource,\n                type: \"video/ogg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), \"Your browser does not support HTML video.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: tempSource,\n            title: \"YouTube video player\",\n            frameborder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowfullscreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoUrl\",\n            className: \"form-control\",\n            onChange: getTemporaryUrl,\n            placeholder: \"Enter video Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"file\",\n            name: \"fileUpload\",\n            accept: \"video/mp4\",\n            onChange: getTemporaryUrl,\n            id: \"inputGroupFile02\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" upload-video\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn-success \",\n            type: \"submit\",\n            children: \"UpLoad Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadVideos, \"B1nZ8h4aJbGZONmU8oge7U8zZts=\");\n\n_c = UploadVideos;\nexport default UploadVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideos\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/routes/UploadVideosPage.jsx"],"names":["React","useState","useEffect","useContext","StateContext","Link","UploadVideos","tempSource","setTempSource","displayVideo","setDisplayVideo","displayYouTubeVideo","setDisplayYouTubeVideo","getTemporaryUrl","e","name","value","files","target","URL","createObjectURL","handleUpLoadVideo","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UploadVideos() {\r\n  const [tempSource, setTempSource] = useState(\"\");\r\n  const [displayVideo, setDisplayVideo] = useState(\"\")\r\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = \"display:none\";\r\n\r\n  // https://www.youtube.com/embed/8YhAFBOSk1U\r\n\r\n  function getTemporaryUrl(e) {\r\n    const { name, value, files } = e.target;\r\n    switch (name) {\r\n      case \"videoUrl\":\r\n        setTempSource(value);\r\n        // if(value.includes(\"youtube\")){\r\n        // setDisplayYouTubeVideo(\"display:block\")\r\n        // setDisplayVideo(\"display:none\")\r\n        // }else{\r\n\r\n        // setDisplayYouTubeVideo(\"display:none\")\r\n        // setDisplayVideo(\"display:block\")\r\n\r\n        // }\r\n\r\n        break;\r\n\r\n      case \"fileUpload\":\r\n        setTempSource(URL.createObjectURL(files[0]));\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleUpLoadVideo() {}\r\n\r\n  //   </div>\r\n  // </div>\r\n  // <input\r\n  //   type=\"file\"\r\n  //   name=\"fileUpload\"\r\n  //   accept=\"video/mp4\"\r\n  //   ref=\"filesUploadVideo\"\r\n  //   @change=\"localFiles\"\r\n  //   v-show=\"false\"\r\n  // />\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container p-3 my-3   videoUpload-container\">\r\n        <form onSubmit={handleUpLoadVideo}>\r\n          {tempSource.length > 0 && (\r\n            <div>\r\n              <div style={{displayVideo}}>\r\n              <video width=\"500\" heigth=\"100\" controls>\r\n                <source src={tempSource} type=\"video/mp4\" />\r\n                <source src={tempSource} type=\"video/ogg\" />\r\n                Your browser does not support HTML video.\r\n              </video>\r\n              </div>\r\n              {/* <div style={{displayYouTubeVideo}}> */}\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src={tempSource}\r\n                title=\"YouTube video player\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n              {/* </div> */}\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"videoUrl\"\r\n              className=\"form-control\"\r\n              onChange={getTemporaryUrl}\r\n              placeholder=\"Enter video Url\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <span>Or</span>\r\n\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              name=\"fileUpload\"\r\n              accept=\"video/mp4\"\r\n              onChange={getTemporaryUrl}\r\n              id=\"inputGroupFile02\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\" upload-video\">\r\n            <button className=\" btn btn-success \" type=\"submit\">\r\n              UpLoad Video\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UploadVideos;\r\n"]},"metadata":{},"sourceType":"module"}