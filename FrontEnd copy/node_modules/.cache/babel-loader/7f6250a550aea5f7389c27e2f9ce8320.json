{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\routes\\\\UploadVideosPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Context/StateContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadVideos() {\n  _s();\n\n  const [tempSource, setTempSource] = useState(\"\");\n  const [tempYoutubeSource, setYoutubeTempSource] = useState(\"\");\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\"); // useEffect(() => displayVideoContainer(), [loginUser]);\n  // https://www.youtube.com/embed/8YhAFBOSk1U\n  // https://www.w3schools.com/html/mov_bbb.mp4\n  // https://www.youtube.com/embed/FCUk7rIBBAE\n\n  function getTemporaryUrl(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    switch (name) {\n      case \"videoUrl\":\n        if (value.includes(\"youtu\")) {\n          handleYoutubeUrl(value);\n        } else {\n          setDisplayYouTubeVideo(\"none\");\n          setDisplayVideo(\"block\");\n          setTempSource(value);\n        }\n\n        break;\n\n      case \"fileUpload\":\n        setTempSource(URL.createObjectURL(files[0]));\n        break;\n\n      default:\n        break;\n    }\n\n    e.preventDefault();\n  }\n\n  function handleTitleInput() {}\n\n  function handleYoutubeUrl(url) {\n    setDisplayYouTubeVideo(\"block\");\n    setDisplayVideo(\"none\");\n\n    if (url.includes(\"embed\") > 0) {\n      return setYoutubeTempSource(url);\n    } else {\n      const urlParams = \"youtu.be/\";\n      const indexOfvideoId = url.search(urlParams) + urlParams.length;\n      const videoId = url.substr(indexOfvideoId, 11);\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\n      console.log(videoUrl, \"working\");\n      return setYoutubeTempSource(videoUrl);\n    }\n  }\n\n  function handleUpLoadVideo() {} //   </div>\n  // </div>\n  // <input\n  //   type=\"file\"\n  //   name=\"fileUpload\"\n  //   accept=\"video/mp4\"\n  //   ref=\"filesUploadVideo\"\n  //   @change=\"localFiles\"\n  //   v-show=\"false\"\n  // />\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3 my-3   videoUpload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpLoadVideo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoFrame\",\n          children: (tempSource.length > 0 || tempYoutubeSource.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"video\", {\n                width: \"500\",\n                heigth: \"315\",\n                controls: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempSource,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempSource,\n                  type: \"video/ogg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), \"Your browser does not support HTML video.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayYouTubeVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: tempYoutubeSource,\n                title: \"YouTube video player\",\n                frameBorder: \"0\",\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowfullscreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoUrl\",\n            className: \"form-control\",\n            onChange: getTemporaryUrl,\n            placeholder: \"Enter video Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"file\",\n            name: \"fileUpload\",\n            accept: \"video/mp4\",\n            onChange: getTemporaryUrl,\n            id: \"inputGroupFile02\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"required-video-details\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoTitle\",\n            onChange: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" upload-video\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn-success \",\n            type: \"submit\",\n            children: \"UpLoad Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadVideos, \"Nb4aOxmwuvFsA3w2pbgO7lUHkrY=\");\n\n_c = UploadVideos;\nexport default UploadVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideos\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/routes/UploadVideosPage.jsx"],"names":["React","useState","useEffect","useContext","StateContext","Link","UploadVideos","tempSource","setTempSource","tempYoutubeSource","setYoutubeTempSource","displayVideo","setDisplayVideo","displayYouTubeVideo","setDisplayYouTubeVideo","getTemporaryUrl","e","name","value","files","target","includes","handleYoutubeUrl","URL","createObjectURL","preventDefault","handleTitleInput","url","urlParams","indexOfvideoId","search","length","videoId","substr","videoUrl","console","log","handleUpLoadVideo","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UploadVideos() {\r\n  const [tempSource, setTempSource] = useState(\"\");\r\n  const [tempYoutubeSource, setYoutubeTempSource] = useState(\"\");\r\n\r\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\r\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\");\r\n\r\n  // useEffect(() => displayVideoContainer(), [loginUser]);\r\n\r\n  // https://www.youtube.com/embed/8YhAFBOSk1U\r\n  // https://www.w3schools.com/html/mov_bbb.mp4\r\n  // https://www.youtube.com/embed/FCUk7rIBBAE\r\n\r\n  function getTemporaryUrl(e) {\r\n    const { name, value, files } = e.target;\r\n    switch (name) {\r\n      case \"videoUrl\":\r\n        if (value.includes(\"youtu\")) {\r\n          handleYoutubeUrl(value);\r\n        } else {\r\n          setDisplayYouTubeVideo(\"none\");\r\n          setDisplayVideo(\"block\");\r\n          setTempSource(value);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"fileUpload\":\r\n        setTempSource(URL.createObjectURL(files[0]));\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\nfunction handleTitleInput(){\r\n\r\n\r\n\r\n}\r\n\r\n\r\n  function handleYoutubeUrl(url) {\r\n    setDisplayYouTubeVideo(\"block\");\r\n    setDisplayVideo(\"none\");\r\n    if (url.includes(\"embed\") > 0) {\r\n      return setYoutubeTempSource(url);\r\n    } else {\r\n      const urlParams = \"youtu.be/\";\r\n      const indexOfvideoId = url.search(urlParams) + urlParams.length;\r\n      const videoId = url.substr(indexOfvideoId, 11);\r\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\r\n      console.log(videoUrl, \"working\");\r\n      return setYoutubeTempSource(videoUrl);\r\n    }\r\n  }\r\n\r\n  function handleUpLoadVideo() {}\r\n\r\n  //   </div>\r\n  // </div>\r\n  // <input\r\n  //   type=\"file\"\r\n  //   name=\"fileUpload\"\r\n  //   accept=\"video/mp4\"\r\n  //   ref=\"filesUploadVideo\"\r\n  //   @change=\"localFiles\"\r\n  //   v-show=\"false\"\r\n  // />\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container p-3 my-3   videoUpload-container\">\r\n        <form onSubmit={handleUpLoadVideo}>\r\n          <div className=\"videoFrame\">\r\n            {(tempSource.length > 0 || tempYoutubeSource.length > 0) && (\r\n              <div>\r\n                <div style={{ display: displayVideo }}>\r\n                  <video width=\"500\" heigth=\"315\" controls>\r\n                    <source src={tempSource} type=\"video/mp4\" />\r\n                    <source src={tempSource} type=\"video/ogg\" />\r\n                    Your browser does not support HTML video.\r\n                  </video>\r\n                </div>\r\n                <div style={{ display: displayYouTubeVideo }}>\r\n                  <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={tempYoutubeSource}\r\n                    title=\"YouTube video player\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowfullscreen\r\n                  ></iframe>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"videoUrl\"\r\n              className=\"form-control\"\r\n              onChange={getTemporaryUrl}\r\n              placeholder=\"Enter video Url\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <span>Or</span>\r\n\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              name=\"fileUpload\"\r\n              accept=\"video/mp4\"\r\n              onChange={getTemporaryUrl}\r\n              id=\"inputGroupFile02\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"required-video-details\">\r\n            <input type=\"text\" name=\"videoTitle\" onChange=\"\" />\r\n            {/* <input type=\"text\"  name=\"videoType\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  /> */}\r\n          </div>\r\n\r\n          <div className=\" upload-video\">\r\n            <button className=\" btn btn-success \" type=\"submit\">\r\n              UpLoad Video\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UploadVideos;\r\n"]},"metadata":{},"sourceType":"module"}