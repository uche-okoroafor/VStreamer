{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\Context\\\\StateContext.jsx\";\nimport React, { createContext, Component } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; // import dogImages from '../dogImages.json';\n// import catImages from '../catImages.json';\n// import birdImages from '../birdImages.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\n\nclass StateContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      loginUser: \"\",\n      data: \"\",\n      routeTo: \"\",\n      userData: [],\n      response: \"\"\n    };\n\n    this.handleUserAuthentication = async (userName, password) => {\n      axios.get(`/login/${userName}/${password}`).then(response => {\n        this.setState({\n          userConfirmed: response.data.status\n        });\n      }).then(() => {\n        this.handleGetUserData(userName);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleCreateUserAccount = (userName, password) => {\n      axios.post(`/create_account/${userName}/${password}`).then(response => {\n        this.setState({\n          userConfirmed: response.data.status\n        });\n      }).then(() => {\n        this.handleGetUserData(userName);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleGetUserData = async userName => {\n      if (this.state.userConfirmed) {\n        axios.get(`/login/${userName}`).then(response => {\n          this.setState({\n            userData: response.data.userData\n          });\n          this.setState({\n            loginUser: true\n          });\n        }).catch(err => console.log(err));\n      } else {\n        this.setState({\n          loginUser: fa\n        });\n      }\n    };\n\n    this.resetLoginUser = () => {\n      this.setState({\n        loginUser: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: { ...this.state,\n        handleUserAuthentication: this.handleUserAuthentication,\n        handleCreateUserAccount: this.handleCreateUserAccount,\n        resetLoginUser: this.resetLoginUser\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StateContextProvider;","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/Context/StateContext.jsx"],"names":["React","createContext","Component","axios","useHistory","StateContext","StateContextProvider","state","userName","password","loginUser","data","routeTo","userData","response","handleUserAuthentication","get","then","setState","userConfirmed","status","handleGetUserData","catch","err","console","log","handleCreateUserAccount","post","fa","resetLoginUser","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AACA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEP,MAAMK,oBAAN,SAAmCJ,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CK,KAD2C,GACnC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,QAAQ,EAAE;AAPJ,KADmC;;AAAA,SAiC3CC,wBAjC2C,GAiChB,OAAOP,QAAP,EAAiBC,QAAjB,KAA8B;AACvDN,MAAAA,KAAK,CACFa,GADH,CACQ,UAASR,QAAS,IAAGC,QAAS,EADtC,EAEGQ,IAFH,CAESH,QAAD,IAAc;AAClB,aAAKI,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAEL,QAAQ,CAACH,IAAT,CAAcS;AADjB,SAAd;AAGD,OANH,EAOGH,IAPH,CAOQ,MAAM;AACV,aAAKI,iBAAL,CAAuBb,QAAvB;AACD,OATH,EAUGc,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,KA7C0C;;AAAA,SAiD3CG,uBAjD2C,GAiDjB,CAAClB,QAAD,EAAWC,QAAX,KAAwB;AAChDN,MAAAA,KAAK,CACFwB,IADH,CACS,mBAAkBnB,QAAS,IAAGC,QAAS,EADhD,EAEGQ,IAFH,CAESH,QAAD,IAAc;AACnB,aAAKI,QAAL,CAAc;AACXC,UAAAA,aAAa,EAAEL,QAAQ,CAACH,IAAT,CAAcS;AADlB,SAAd;AAGA,OANH,EAOGH,IAPH,CAOQ,MAAM;AACV,aAAKI,iBAAL,CAAuBb,QAAvB;AACD,OATH,EAWGc,KAXH,CAWUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXlB;AAYD,KA9D0C;;AAAA,SAiE5CF,iBAjE4C,GAiExB,MAAOb,QAAP,IAAoB;AACrC,UAAI,KAAKD,KAAL,CAAWY,aAAf,EAA8B;AAC5BhB,QAAAA,KAAK,CACFa,GADH,CACQ,UAASR,QAAS,EAD1B,EAEGS,IAFH,CAESH,QAAD,IAAc;AAClB,eAAKI,QAAL,CAAc;AACZL,YAAAA,QAAQ,EAAEC,QAAQ,CAACH,IAAT,CAAcE;AADZ,WAAd;AAGA,eAAKK,QAAL,CAAc;AACZR,YAAAA,SAAS,EAAE;AADC,WAAd;AAGD,SATH,EAUGY,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,OAZD,MAYK;AAEN,aAAKL,QAAL,CAAc;AACLR,UAAAA,SAAS,EAAEkB;AADN,SAAd;AAIF;AACE,KArF0C;;AAAA,SA0F3CC,cA1F2C,GA0F1B,MAAM;AACrB,WAAKX,QAAL,CAAc;AACZR,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KA9F0C;AAAA;;AAgG3CoB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE,EACL,GAAG,KAAKvB,KADH;AAELQ,QAAAA,wBAAwB,EAAE,KAAKA,wBAF1B;AAGLW,QAAAA,uBAAuB,EAAE,KAAKA,uBAHzB;AAILG,QAAAA,cAAc,EAAE,KAAKA;AAJhB,OADT;AAAA,gBAQG,KAAKE,KAAL,CAAWC;AARd;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7G0C;;AAgH7C,eAAe1B,oBAAf","sourcesContent":["import React, { createContext, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import dogImages from '../dogImages.json';\r\n// import catImages from '../catImages.json';\r\n// import birdImages from '../birdImages.json';\r\n\r\nexport const StateContext = createContext();\r\n\r\nclass StateContextProvider extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    loginUser: \"\",\r\n    data: \"\",\r\n    routeTo: \"\",\r\n    userData: [],\r\n    response: \"\",\r\n  };\r\n\r\n  // componentDidMount() {\r\n  // \tthis.shuffleImages();\r\n  // }\r\n\r\n  // shuffleCards = () => {\r\n  // \tlet images = this.state.displayedImages;\r\n  // \tfor (let i = images.length - 1; i > 0; i--) {\r\n  // \t\tconst j = Math.floor(Math.random() * (i + 1));\r\n  // \t\t[ images[i], images[j] ] = [ images[j], images[i] ];\r\n  // \t}\r\n  // \tthis.setState({\r\n  // \t\tdogImages: images\r\n  // \t});\r\n  // };\r\n\r\n  // shuffleImages = () => {\r\n  // \tlet num = Math.floor(Math.random() * this.state.images.length);\r\n  // \tthis.setState({\r\n  // \t\tdisplayedImages: this.state.images[num]\r\n  // \t});\r\n  // };\r\n\r\n  handleUserAuthentication = async (userName, password) => {\r\n    axios\r\n      .get(`/login/${userName}/${password}`)\r\n      .then((response) => {\r\n        this.setState({\r\n          userConfirmed: response.data.status,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.handleGetUserData(userName);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n \r\n\r\n  handleCreateUserAccount = (userName, password) => {\r\n    axios\r\n      .post(`/create_account/${userName}/${password}`)\r\n      .then((response) => {\r\n       this.setState({\r\n          userConfirmed: response.data.status,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.handleGetUserData(userName);\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n handleGetUserData = async (userName) => {\r\n    if (this.state.userConfirmed) {\r\n      axios\r\n        .get(`/login/${userName}`)\r\n        .then((response) => {\r\n          this.setState({\r\n            userData: response.data.userData,\r\n          });\r\n          this.setState({\r\n            loginUser: true,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }else{\r\n\r\n   this.setState({\r\n            loginUser: fa,\r\n          });\r\n\r\n}\r\n  };\r\n\r\n\r\n\r\n\r\n  resetLoginUser = () => {\r\n    this.setState({\r\n      loginUser: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StateContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleUserAuthentication: this.handleUserAuthentication,\r\n          handleCreateUserAccount: this.handleCreateUserAccount,\r\n          resetLoginUser: this.resetLoginUser,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </StateContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}