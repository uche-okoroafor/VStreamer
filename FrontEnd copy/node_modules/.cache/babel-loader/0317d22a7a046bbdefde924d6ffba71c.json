{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\routes\\\\UploadVideosPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Context/StateContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadVideos() {\n  _s();\n\n  const [tempSource, setTempSource] = useState(\"\");\n\n  const [iframe, setIframe] = // https://www.youtube.com/embed/8YhAFBOSk1U\n  function getTemporaryUrl(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    switch (name) {\n      case \"videoUrl\":\n        setTempSource(value);\n\n        if (value.includes(\"youtube\")) {\n          setIframe(true);\n        } else {\n          setIframe(false);\n        }\n\n        break;\n\n      case \"fileUpload\":\n        setTempSource(URL.createObjectURL(files[0]));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  function handleUpLoadVideo() {} //   </div>\n  // </div>\n  // <input\n  //   type=\"file\"\n  //   name=\"fileUpload\"\n  //   accept=\"video/mp4\"\n  //   ref=\"filesUploadVideo\"\n  //   @change=\"localFiles\"\n  //   v-show=\"false\"\n  // />\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3 my-3   videoUpload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpLoadVideo,\n        children: [tempSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            style: {\n              isYouTubeVideo\n            },\n            width: \"500\",\n            heigth: \"100\",\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: tempSource,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n              src: tempSource,\n              type: \"video/ogg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 14\n            }, this), \"Your browser does not support HTML video.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            style: {},\n            height: \"315\",\n            src: tempSource,\n            title: \"YouTube video player\",\n            frameborder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowfullscreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoUrl\",\n            className: \"form-control\",\n            onChange: getTemporaryUrl,\n            placeholder: \"Enter video Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"file\",\n            name: \"fileUpload\",\n            accept: \"video/mp4\",\n            onChange: getTemporaryUrl,\n            id: \"inputGroupFile02\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 2\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" upload-video\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn-success \",\n            type: \"submit\",\n            children: \"UpLoad Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 2\n  }, this);\n}\n\n_s(UploadVideos, \"JIZlINGJyYrUI9siDP3TEQjaG4g=\");\n\n_c = UploadVideos;\nexport default UploadVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideos\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/routes/UploadVideosPage.jsx"],"names":["React","useState","useEffect","useContext","StateContext","Link","UploadVideos","tempSource","setTempSource","iframe","setIframe","getTemporaryUrl","e","name","value","files","target","includes","URL","createObjectURL","handleUpLoadVideo","length","isYouTubeVideo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction UploadVideos  () {\r\n\r\nconst[tempSource,setTempSource] = useState(\"\")\r\nconst[iframe,setIframe] = \r\n\r\n\r\n// https://www.youtube.com/embed/8YhAFBOSk1U\r\n\r\n\r\nfunction getTemporaryUrl(e){\r\n    const { name, value,files } = e.target;\r\nswitch (name) {\r\n  case \"videoUrl\":\r\n         setTempSource(value)\r\nif(value.includes(\"youtube\")){\r\nsetIframe(true)\r\n}else{\r\n\r\nsetIframe(false)\r\n\r\n}\r\n\r\n    break;\r\n\r\n  case \"fileUpload\":\r\n         setTempSource(URL.createObjectURL(files[0]))\r\n\r\n    break;\r\n\r\n\r\n  default:\r\n    break;\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction handleUpLoadVideo(){\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n          //   </div>\r\n          // </div>\r\n          // <input\r\n          //   type=\"file\"\r\n          //   name=\"fileUpload\"\r\n          //   accept=\"video/mp4\"\r\n          //   ref=\"filesUploadVideo\"\r\n          //   @change=\"localFiles\"\r\n          //   v-show=\"false\"\r\n          // />\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n <React.Fragment> \r\n<div className=\"container p-3 my-3   videoUpload-container\">\r\n\r\n<form onSubmit={handleUpLoadVideo} >\r\n{ (tempSource.length>0) &&   ( <div>\r\n\r\n             <video style={{isYouTubeVideo}} width=\"500\" heigth=\"100\" controls>\r\n               <source src={tempSource} type=\"video/mp4\" />\r\n             <source src={tempSource} type=\"video/ogg\" />\r\n        Your browser does not support HTML video.\r\n       </video>\r\n\r\n\r\n<iframe width=\"560\" style={{}} height=\"315\" src={tempSource} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n<div><input type=\"text\" name=\"videoUrl\" className=\"form-control\"\r\n  onChange={getTemporaryUrl}\r\n placeholder=\"Enter video Url\" />\r\n</div>\r\n<br />\r\n<span>Or</span>\r\n\r\n<br />\r\n<br />\r\n<div>\r\n <input\r\nclassName=\"form-control\" \r\n            type=\"file\"\r\n            name=\"fileUpload\"\r\n            accept=\"video/mp4\"\r\n            onChange={getTemporaryUrl}\r\nid=\"inputGroupFile02\"\r\n          />\r\n\r\n\r\n</div>\r\n    \r\n\r\n\r\n\r\n\r\n<div className=\" upload-video\"><button className=\" btn btn-success \" type=\"submit\" >UpLoad Video</button>\r\n</div>\r\n\r\n\r\n\r\n</form>\r\n\r\n</div>\r\n</React.Fragment>\r\n\r\n  );\r\n}\r\n \r\nexport default  UploadVideos;"]},"metadata":{},"sourceType":"module"}