{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\Context\\\\StateContext.jsx\";\nimport React, { createContext, Component } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; // import dogImages from '../dogImages.json';\n// import catImages from '../catImages.json';\n// import birdImages from '../birdImages.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\n\nclass StateContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      userExist: \"\",\n      data: \"\",\n      routeTo: \"\",\n      userData: [],\n      response: false // images: [ dogImages, catImages, birdImages ],\n      // displayedImages: dogImages,\n      // count: 0,\n      // clicked: null\n\n    };\n\n    this.handleUserAuthentication = async (userName, password) => {\n      // this.setState({\n      // routeTo:useHistory()\n      // })\n      // axios({\n      //   method: 'get',\n      //   url: '/user/12345',\n      //   data: {\n      //    userName,\n      //    password\n      //   }\n      // })\n      axios.get(`/login/${userName}/${password}`).then(response => {\n        this.setState({\n          response: response.data.status\n        }); // setTimeout(() => {\n        //  this.handleGetUserData(userName,password)\t\n        // }, 2000);\n      }).then(() => {\n        this.handleGetUserData(userName, password);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleGetUserData = async (userName, password) => {\n      // console.log(this.state.userExist)\n      if (this.state.userExist) {\n        axios.get(`/login/${userName}`).then(response => {\n          this.setState({\n            userData: response.data.userData\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.handleCreateUserAccount = (userName, password) => {\n      axios.post(`/create_account/${userName}/${password}`).then(response => {\n        console.log(response.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.resetUserExist = () => {\n      this.setState({\n        userExist: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: { ...this.state,\n        handleUserAuthentication: this.handleUserAuthentication,\n        handleCreateUserAccount: this.handleCreateUserAccount,\n        resetUserExist: this.resetUserExist\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StateContextProvider;","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/Context/StateContext.jsx"],"names":["React","createContext","Component","axios","useHistory","StateContext","StateContextProvider","state","userName","password","userExist","data","routeTo","userData","response","handleUserAuthentication","get","then","setState","status","handleGetUserData","catch","err","console","log","handleCreateUserAccount","post","resetUserExist","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AACA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEP,MAAMK,oBAAN,SAAmCJ,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CK,KAD2C,GACnC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAOVC,MAAAA,QAAQ,EAAC,KAPC,CAQN;AACA;AACA;AACA;;AAXM,KADmC;;AAAA,SAqC3CC,wBArC2C,GAqChB,OAAOP,QAAP,EAAiBC,QAAjB,KAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,MAAAA,KAAK,CAACa,GAAN,CAAW,UAASR,QAAS,IAAGC,QAAS,EAAzC,EACGQ,IADH,CACSH,QAAD,IAAc;AAEzB,aAAKI,QAAL,CAAc;AACPJ,UAAAA,QAAQ,EAAEA,QAAQ,CAACH,IAAT,CAAcQ;AADjB,SAAd,EAFyB,CAK1B;AACA;AACA;AACO,OATH,EAUHF,IAVG,CAWJ,MAAI;AACJ,aAAKG,iBAAL,CAAuBZ,QAAvB,EAAgCC,QAAhC;AAEC,OAdG,EAgBGY,KAhBH,CAgBUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBlB;AAiBD,KAlE0C;;AAAA,SAqE7CF,iBArE6C,GAqE1B,OAAOZ,QAAP,EAAgBC,QAAhB,KAA2B;AAC9C;AAEQ,UAAI,KAAKF,KAAL,CAAWG,SAAf,EAA0B;AAEzBP,QAAAA,KAAK,CACDa,GADJ,CACS,UAASR,QAAS,EAD3B,EAEIS,IAFJ,CAEUH,QAAD,IAAc;AAClB,eAAKI,QAAL,CAAc;AACZL,YAAAA,QAAQ,EAAEC,QAAQ,CAACH,IAAT,CAAcE;AADZ,WAAd;AAID,SAPJ,EAQIQ,KARJ,CAQWC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARnB;AASA;AAER,KArF4C;;AAAA,SA0F3CG,uBA1F2C,GA0FjB,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAChDN,MAAAA,KAAK,CACFuB,IADH,CACS,mBAAkBlB,QAAS,IAAGC,QAAS,EADhD,EAEGQ,IAFH,CAESH,QAAD,IAAc;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACH,IAArB;AACD,OAJH,EAKGU,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,KAjG0C;;AAAA,SAoG7CK,cApG6C,GAoG9B,MAAI;AACnB,WAAKT,QAAL,CAAc;AACdR,QAAAA,SAAS,EAAC;AADI,OAAd;AAKC,KA1G4C;AAAA;;AA8G3CkB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE,EACL,GAAG,KAAKrB,KADH;AAELQ,QAAAA,wBAAwB,EAAE,KAAKA,wBAF1B;AAGLU,QAAAA,uBAAuB,EAAE,KAAKA,uBAHzB;AAINE,QAAAA,cAAc,EAAC,KAAKA;AAJd,OADT;AAAA,gBAQG,KAAKE,KAAL,CAAWC;AARd;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA3H0C;;AA8H7C,eAAexB,oBAAf","sourcesContent":["import React, { createContext, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import dogImages from '../dogImages.json';\r\n// import catImages from '../catImages.json';\r\n// import birdImages from '../birdImages.json';\r\n\r\nexport const StateContext = createContext();\r\n\r\nclass StateContextProvider extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    userExist: \"\",\r\n    data: \"\",\r\n    routeTo: \"\",\r\n    userData: [],\r\nresponse:false\r\n    // images: [ dogImages, catImages, birdImages ],\r\n    // displayedImages: dogImages,\r\n    // count: 0,\r\n    // clicked: null\r\n  };\r\n\r\n  // componentDidMount() {\r\n  // \tthis.shuffleImages();\r\n  // }\r\n\r\n  // shuffleCards = () => {\r\n  // \tlet images = this.state.displayedImages;\r\n  // \tfor (let i = images.length - 1; i > 0; i--) {\r\n  // \t\tconst j = Math.floor(Math.random() * (i + 1));\r\n  // \t\t[ images[i], images[j] ] = [ images[j], images[i] ];\r\n  // \t}\r\n  // \tthis.setState({\r\n  // \t\tdogImages: images\r\n  // \t});\r\n  // };\r\n\r\n  // shuffleImages = () => {\r\n  // \tlet num = Math.floor(Math.random() * this.state.images.length);\r\n  // \tthis.setState({\r\n  // \t\tdisplayedImages: this.state.images[num]\r\n  // \t});\r\n  // };\r\n\r\n  handleUserAuthentication = async (userName, password) => {\r\n    // this.setState({\r\n    // routeTo:useHistory()\r\n    // })\r\n    // axios({\r\n    //   method: 'get',\r\n    //   url: '/user/12345',\r\n    //   data: {\r\n    //    userName,\r\n    //    password\r\n    //   }\r\n    // })\r\n    axios.get(`/login/${userName}/${password}`)\r\n      .then((response) => {\r\n       \r\n this.setState({\r\n        response: response.data.status,\r\n        })\r\n// setTimeout(() => {\r\n//  this.handleGetUserData(userName,password)\t\r\n// }, 2000);\r\n      })\r\n.then( \r\n()=>{\r\nthis.handleGetUserData(userName,password)\t\r\n\r\n}\r\n)\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\nhandleGetUserData= async (userName,password)=>{\r\n// console.log(this.state.userExist)\r\n\r\n        if (this.state.userExist) {\r\n\r\n         axios\r\n            .get(`/login/${userName}`)\r\n            .then((response) => {\r\n              this.setState({\r\n                userData: response.data.userData,\r\n              });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  handleCreateUserAccount = (userName, password) => {\r\n    axios\r\n      .post(`/create_account/${userName}/${password}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\nresetUserExist=()=>{\r\nthis.setState({\r\nuserExist:\"\"\r\n})\r\n\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <StateContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleUserAuthentication: this.handleUserAuthentication,\r\n          handleCreateUserAccount: this.handleCreateUserAccount,\r\n         resetUserExist:this.resetUserExist\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </StateContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}