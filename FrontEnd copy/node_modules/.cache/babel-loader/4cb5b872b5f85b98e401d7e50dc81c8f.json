{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\Context\\\\StateContext.jsx\";\nimport React, { createContext, Component } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\"; // import dogImages from '../dogImages.json';\n// import catImages from '../catImages.json';\n// import birdImages from '../birdImages.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\n\nclass StateContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      loginUser: \"\",\n      data: \"\",\n      routeTo: \"\",\n      userData: [],\n      response: \"\",\n      userConfirmed: false,\n      allVideos: [],\n      viewedVideo: {\n        videoTitle: \"\"\n      }\n    };\n\n    this.handleGetVideos = async () => {\n      try {\n        const response = await axios.post(`/download_videos/`);\n        this.setState({\n          allVideos: response.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleUserAuthentication = async (userName, password) => {\n      axios.get(`/login/${userName}/`, {\n        password\n      }).then(response => {\n        this.setState({\n          userConfirmed: response.data.status\n        });\n      }).then(() => {\n        this.handleGetUserData(userName);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleCreateUserAccount = (userName, password) => {\n      axios.post(`/create_account/${userName}`, {\n        password\n      }).then(response => {\n        this.setState({\n          userConfirmed: response.data.status\n        });\n      }).then(() => {\n        this.handleGetUserData(userName);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleGetUserData = async userName => {\n      if (this.state.userConfirmed) {\n        axios.get(`/login/${userName}/user_data`).then(response => {\n          this.setState({\n            userData: response.data.userData\n          });\n          this.setState({\n            loginUser: true\n          });\n        }).catch(err => console.log(err));\n      } else {\n        this.setState({\n          loginUser: false\n        });\n      }\n    };\n\n    this.handleViewedVideo = videoId => {\n      const viewedVideo = this.state.allVideos.filter(video => video._id === videoId);\n      this.setState({\n        viewedVideo: viewedVideo[0]\n      });\n      console.log(viewedVideo);\n    };\n\n    this.uploadVideo = async (videoTitle, videoSource) => {\n      const videoId = uuidv4();\n      const userVideo = {\n        videoTitle,\n        videoSource,\n        videoId\n      };\n      axios.post(`/upload_video/${this.state.userData.userName}/${this.state.userData._id}`, userVideo).then(response => {\n        console.log(response.data, \"videos\");\n      }).catch(err => console.log(err));\n    };\n\n    this.resetLoginUser = () => {\n      this.setState({\n        loginUser: \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetVideos();\n  } // shuffleCards = () => {\n  // \tlet images = this.state.displayedImages;\n  // \tfor (let i = images.length - 1; i > 0; i--) {\n  // \t\tconst j = Math.floor(Math.random() * (i + 1));\n  // \t\t[ images[i], images[j] ] = [ images[j], images[i] ];\n  // \t}\n  // \tthis.setState({\n  // \t\tdogImages: images\n  // \t});\n  // };\n  // shuffleImages = () => {\n  // \tlet num = Math.floor(Math.random() * this.state.images.length);\n  // \tthis.setState({\n  // \t\tdisplayedImages: this.state.images[num]\n  // \t});\n  // };\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: { ...this.state,\n        uploadVideo: this.uploadVideo,\n        handleUserAuthentication: this.handleUserAuthentication,\n        handleCreateUserAccount: this.handleCreateUserAccount,\n        resetLoginUser: this.resetLoginUser,\n        handleViewedVideo: this.handleViewedVideo\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StateContextProvider;","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/Context/StateContext.jsx"],"names":["React","createContext","Component","axios","useHistory","v4","uuidv4","StateContext","StateContextProvider","state","userName","password","loginUser","data","routeTo","userData","response","userConfirmed","allVideos","viewedVideo","videoTitle","handleGetVideos","post","setState","err","console","log","handleUserAuthentication","get","then","status","handleGetUserData","catch","handleCreateUserAccount","handleViewedVideo","videoId","filter","video","_id","uploadVideo","videoSource","userVideo","resetLoginUser","componentDidMount","render","props","children"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// import dogImages from '../dogImages.json';\r\n// import catImages from '../catImages.json';\r\n// import birdImages from '../birdImages.json';\r\n\r\nexport const StateContext = createContext();\r\n\r\nclass StateContextProvider extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    loginUser: \"\",\r\n    data: \"\",\r\n    routeTo: \"\",\r\n    userData: [],\r\n    response: \"\",\r\n    userConfirmed: false,\r\nallVideos:[],\r\nviewedVideo:{\r\nvideoTitle:\"\",\r\n\r\n\r\n},\r\n  };\r\n\r\n  componentDidMount() {\r\n  \tthis.handleGetVideos();\r\n  }\r\n\r\n  // shuffleCards = () => {\r\n  // \tlet images = this.state.displayedImages;\r\n  // \tfor (let i = images.length - 1; i > 0; i--) {\r\n  // \t\tconst j = Math.floor(Math.random() * (i + 1));\r\n  // \t\t[ images[i], images[j] ] = [ images[j], images[i] ];\r\n  // \t}\r\n  // \tthis.setState({\r\n  // \t\tdogImages: images\r\n  // \t});\r\n  // };\r\n\r\n  // shuffleImages = () => {\r\n  // \tlet num = Math.floor(Math.random() * this.state.images.length);\r\n  // \tthis.setState({\r\n  // \t\tdisplayedImages: this.state.images[num]\r\n  // \t});\r\n  // };\r\nhandleGetVideos= async ()=>{\r\ntry{\r\nconst response = await axios.post(`/download_videos/`)\r\nthis.setState({allVideos:response.data})\r\n\r\n}\r\ncatch (err) { \r\n    console.log(err);\r\n  } \r\n}\r\n\r\n  handleUserAuthentication = async (userName, password) => {\r\n    axios\r\n      .get(`/login/${userName}/`,{password})\r\n      .then((response) => {\r\n        this.setState({\r\n          userConfirmed: response.data.status,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.handleGetUserData(userName);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleCreateUserAccount = (userName, password) => {\r\n    axios\r\n      .post(`/create_account/${userName}`,{password})\r\n      .then((response) => {\r\n        this.setState({\r\n          userConfirmed: response.data.status,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.handleGetUserData(userName);\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleGetUserData = async (userName) => {\r\n    if (this.state.userConfirmed) {\r\n      axios\r\n        .get(`/login/${userName}/user_data`)\r\n        .then((response) => {\r\n          this.setState({\r\n            userData: response.data.userData,\r\n          });\r\n          this.setState({\r\n            loginUser: true,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      this.setState({\r\n        loginUser: false,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nhandleViewedVideo=(videoId)=>{\r\nconst viewedVideo = this.state.allVideos.filter(video=>video._id === videoId)\r\nthis.setState({\r\nviewedVideo:viewedVideo[0]\r\n})\r\nconsole.log(viewedVideo)\r\n}\r\n\r\n\r\n  uploadVideo = async (videoTitle, videoSource) => {\r\n    const videoId = uuidv4();\r\n  const userVideo = {\r\n        videoTitle,\r\n        videoSource,\r\n        videoId,\r\n    };\r\n\r\n\r\naxios.post(`/upload_video/${this.state.userData.userName}/${this.state.userData._id}`\r\n, userVideo)\r\n      .then((response) => {\r\n        console.log(response.data, \"videos\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  resetLoginUser = () => {\r\n    this.setState({\r\n      loginUser: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StateContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          uploadVideo: this.uploadVideo,\r\n          handleUserAuthentication: this.handleUserAuthentication,\r\n          handleCreateUserAccount: this.handleCreateUserAccount,\r\n          resetLoginUser: this.resetLoginUser,\r\nhandleViewedVideo:this.handleViewedVideo,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </StateContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}