{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\routes\\\\UploadVideosPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Context/StateContext\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadVideos() {\n  _s();\n\n  const {\n    uploadVideo,\n    user\n  } = useContext(StateContext);\n  const [tempOtherVideoSource, setTempOtherVideoSource] = useState(\"\");\n  const [tempYoutubeVideoSource, setTempYoutubeVideoSource] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Choose a file\");\n  const [uploadfile, setUploadfile] = useState({});\n  const [tempVideoSource, setTempVideoSource] = useState(\"\");\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\"); // useEffect(() => displayVideoContainer(), [loginUser]);\n  // https://www.youtube.com/embed/8YhAFBOSk1U\n  // https://www.w3schools.com/html/mov_bbb.mp4\n  // https://www.youtube.com/embed/FCUk7rIBBAE\n\n  function getTemporaryUrl(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    switch (name) {\n      case \"videoSource\":\n        if (value.includes(\"youtu\")) {\n          handleYoutubeUrl(value);\n        } else {\n          setDisplayYouTubeVideo(\"none\");\n          setDisplayVideo(\"block\");\n          setTempOtherVideoSource(value);\n          setTempVideoSource(value);\n        }\n\n        break;\n\n      case \"fileUpload\":\n        setTempOtherVideoSource(URL.createObjectURL(files[0]));\n        setTempVideoSource(URL.createObjectURL(files[0]));\n        setFile(files[0]);\n        setFileName(files[0].name);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleTitleInput(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setVideoTitle(value);\n  }\n\n  function handleYoutubeUrl(videoSource) {\n    setDisplayYouTubeVideo(\"block\");\n    setDisplayVideo(\"none\");\n\n    if (videoSource.includes(\"embed\") > 0) {\n      setTempVideoSource(videoSource);\n      return setTempYoutubeVideoSource(videoSource);\n    } else {\n      const urlParams = \"youtu.be/\";\n      const indexOfvideoId = videoSource.search(urlParams) + urlParams.length;\n      const youTubeVideoIdLength = 11;\n      const videoId = videoSource.substr(indexOfvideoId, youTubeVideoIdLength);\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\n      setTempVideoSource(videoUrl);\n      return setTempYoutubeVideoSource(videoUrl);\n    }\n  }\n\n  const handleUploadVideo = async e => {//     e.preventDefault();\n    //     const videoId = uuidv4();\n    //     const formData = new FormData();\n    //     formData.append(\"file\", file);\n    //     const userVideo = {\n    //      videoDetails:{ videoTitle,\n    //       tempVideoSource,\n    //       videoId},\n    //       formData,\n    //     };\n    // console.log(formData)\n    //     try {\n    //       const response = axios.post(\n    //         `/upload_video/${user.userName}/${user._id}`,\n    //         userVideo,\n    //         {\n    //           headers: {\n    //             \"content-Type\": \"multipart/form-data\",\n    //           },\n    //         }\n    //       );\n    //     } catch (err) {\n    // console.log(err)\n    // }\n    // const formData = new FormData()\n    // formData.append('file', file)\n    // try {\n    //   const response = await axios.post('/upload',formData, {\n    //     headers: {\n    //       'content-Type': 'multipart/form-data'\n    //     }\n    //   }\n    //         )\n    //   const { fileName, filePath } = response.data\n    //   setUploadfile({ fileName, filePath })\n    // } catch (err) {\n    //   if (err.response.status === 500) {\n    //     console.log('server-problem')\n    //   } else {\n    //     console.log(err.response.status)\n    //   }\n    // }\n    // uploadVideo(videoTitle, tempVideoSource)\n  }; // uploadVideo = async (videoTitle, videoSource) => {\n  //   const videoId = uuidv4();\n  //   const userVideo = {\n  //     videoTitle,\n  //     videoSource,\n  //     videoId,\n  //   };\n  //   axios\n  //     .post(\n  //       `/upload_video/${this.state.user.userName}/${this.state.user._id}`,\n  //       userVideo\n  //     )\n  //     .then((response) => {\n  //       // console.log(response.data, \"videos\");\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3 my-3   videoUpload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUploadVideo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoFrame\",\n          children: tempVideoSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"video\", {\n                width: \"500\",\n                heigth: \"315\",\n                controls: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempOtherVideoSource,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempOtherVideoSource,\n                  type: \"video/ogg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), \"Your browser does not support HTML video.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayYouTubeVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: tempYoutubeVideoSource,\n                title: \"YouTube video player\",\n                frameBorder: \"0\",\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), tempVideoSource.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"videoSource\",\n              className: \"form-control\",\n              onChange: getTemporaryUrl,\n              placeholder: \"Enter video Url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"fileUpload\",\n              accept: \"video/mp4\",\n              onChange: getTemporaryUrl,\n              id: \"inputGroupFile02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), tempVideoSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"required-video-details\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoTitle\",\n            onChange: handleTitleInput,\n            placeholder: \"Enter Video Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" upload-video\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn-success \",\n            type: \"submit\",\n            children: \"UpLoad Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadVideos, \"Cp/sFyVfBiGclulgj8zdEbY+y7A=\");\n\n_c = UploadVideos;\nexport default UploadVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideos\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/routes/UploadVideosPage.jsx"],"names":["React","useState","useEffect","useContext","StateContext","Link","axios","v4","uuidv4","UploadVideos","uploadVideo","user","tempOtherVideoSource","setTempOtherVideoSource","tempYoutubeVideoSource","setTempYoutubeVideoSource","file","setFile","fileName","setFileName","uploadfile","setUploadfile","tempVideoSource","setTempVideoSource","videoTitle","setVideoTitle","displayVideo","setDisplayVideo","displayYouTubeVideo","setDisplayYouTubeVideo","getTemporaryUrl","e","name","value","files","target","includes","handleYoutubeUrl","URL","createObjectURL","handleTitleInput","videoSource","urlParams","indexOfvideoId","search","length","youTubeVideoIdLength","videoId","substr","videoUrl","handleUploadVideo","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction UploadVideos() {\r\n  const { uploadVideo, user } = useContext(StateContext);\r\n  const [tempOtherVideoSource, setTempOtherVideoSource] = useState(\"\");\r\n  const [tempYoutubeVideoSource, setTempYoutubeVideoSource] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"Choose a file\");\r\n  const [uploadfile, setUploadfile] = useState({});\r\n  const [tempVideoSource, setTempVideoSource] = useState(\"\");\r\n  const [videoTitle, setVideoTitle] = useState(\"\");\r\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\r\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\");\r\n\r\n  // useEffect(() => displayVideoContainer(), [loginUser]);\r\n\r\n  // https://www.youtube.com/embed/8YhAFBOSk1U\r\n  // https://www.w3schools.com/html/mov_bbb.mp4\r\n  // https://www.youtube.com/embed/FCUk7rIBBAE\r\n\r\n  function getTemporaryUrl(e) {\r\n    const { name, value, files } = e.target;\r\n    switch (name) {\r\n      case \"videoSource\":\r\n        if (value.includes(\"youtu\")) {\r\n          handleYoutubeUrl(value);\r\n        } else {\r\n          setDisplayYouTubeVideo(\"none\");\r\n          setDisplayVideo(\"block\");\r\n          setTempOtherVideoSource(value);\r\n          setTempVideoSource(value);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"fileUpload\":\r\n        setTempOtherVideoSource(URL.createObjectURL(files[0]));\r\n        setTempVideoSource(URL.createObjectURL(files[0]));\r\n        setFile(files[0]);\r\n        setFileName(files[0].name);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleTitleInput(e) {\r\n    const { name, value, files } = e.target;\r\n\r\n    setVideoTitle(value);\r\n  }\r\n\r\n  function handleYoutubeUrl(videoSource) {\r\n    setDisplayYouTubeVideo(\"block\");\r\n    setDisplayVideo(\"none\");\r\n    if (videoSource.includes(\"embed\") > 0) {\r\n      setTempVideoSource(videoSource);\r\n\r\n      return setTempYoutubeVideoSource(videoSource);\r\n    } else {\r\n      const urlParams = \"youtu.be/\";\r\n      const indexOfvideoId = videoSource.search(urlParams) + urlParams.length;\r\n      const youTubeVideoIdLength = 11;\r\n      const videoId = videoSource.substr(indexOfvideoId, youTubeVideoIdLength);\r\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\r\n      setTempVideoSource(videoUrl);\r\n\r\n      return setTempYoutubeVideoSource(videoUrl);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleUploadVideo = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const videoId = uuidv4();\r\n//     const formData = new FormData();\r\n//     formData.append(\"file\", file);\r\n//     const userVideo = {\r\n//      videoDetails:{ videoTitle,\r\n//       tempVideoSource,\r\n//       videoId},\r\n//       formData,\r\n//     };\r\n// console.log(formData)\r\n\r\n\r\n\r\n//     try {\r\n//       const response = axios.post(\r\n//         `/upload_video/${user.userName}/${user._id}`,\r\n//         userVideo,\r\n//         {\r\n//           headers: {\r\n//             \"content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//     } catch (err) {\r\n\r\n// console.log(err)\r\n// }\r\n\r\n    // const formData = new FormData()\r\n    // formData.append('file', file)\r\n\r\n    // try {\r\n    //   const response = await axios.post('/upload',formData, {\r\n    //     headers: {\r\n    //       'content-Type': 'multipart/form-data'\r\n    //     }\r\n    //   }\r\n    //         )\r\n\r\n    //   const { fileName, filePath } = response.data\r\n    //   setUploadfile({ fileName, filePath })\r\n    // } catch (err) {\r\n    //   if (err.response.status === 500) {\r\n    //     console.log('server-problem')\r\n    //   } else {\r\n    //     console.log(err.response.status)\r\n    //   }\r\n\r\n    // }\r\n\r\n    // uploadVideo(videoTitle, tempVideoSource)\r\n  };\r\n\r\n  // uploadVideo = async (videoTitle, videoSource) => {\r\n  //   const videoId = uuidv4();\r\n  //   const userVideo = {\r\n  //     videoTitle,\r\n  //     videoSource,\r\n  //     videoId,\r\n  //   };\r\n\r\n  //   axios\r\n  //     .post(\r\n  //       `/upload_video/${this.state.user.userName}/${this.state.user._id}`,\r\n  //       userVideo\r\n  //     )\r\n  //     .then((response) => {\r\n  //       // console.log(response.data, \"videos\");\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container p-3 my-3   videoUpload-container\">\r\n        <form onSubmit={handleUploadVideo}>\r\n          <div className=\"videoFrame\">\r\n            {tempVideoSource.length > 0 && (\r\n              <div>\r\n                <div style={{ display: displayVideo }}>\r\n                  <video width=\"500\" heigth=\"315\" controls>\r\n                    <source src={tempOtherVideoSource} type=\"video/mp4\" />\r\n                    <source src={tempOtherVideoSource} type=\"video/ogg\" />\r\n                    Your browser does not support HTML video.\r\n                  </video>\r\n                </div>\r\n                <div style={{ display: displayYouTubeVideo }}>\r\n                  <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={tempYoutubeVideoSource}\r\n                    title=\"YouTube video player\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {tempVideoSource.length <= 0 && (\r\n            <div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"videoSource\"\r\n                  className=\"form-control\"\r\n                  onChange={getTemporaryUrl}\r\n                  placeholder=\"Enter video Url\"\r\n                />\r\n              </div>\r\n\r\n              <br />\r\n              <span>Or</span>\r\n\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"fileUpload\"\r\n                  accept=\"video/mp4\"\r\n                  onChange={getTemporaryUrl}\r\n                  id=\"inputGroupFile02\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {tempVideoSource.length > 0 && (\r\n            <div className=\"required-video-details\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"videoTitle\"\r\n                onChange={handleTitleInput}\r\n                placeholder=\"Enter Video Title\"\r\n              />\r\n              {/* <input type=\"text\"  name=\"videoType\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  /> */}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\" upload-video\">\r\n            <button className=\" btn btn-success \" type=\"submit\">\r\n              UpLoad Video\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UploadVideos;\r\n"]},"metadata":{},"sourceType":"module"}