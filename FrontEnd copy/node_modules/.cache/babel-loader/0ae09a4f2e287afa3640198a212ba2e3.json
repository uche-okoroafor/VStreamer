{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Node-js\\\\projects\\\\videostreamer\\\\FrontEnd\\\\src\\\\routes\\\\UploadVideosPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Context/StateContext\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadVideos() {\n  _s();\n\n  const {\n    handleUpdataData,\n    user\n  } = useContext(StateContext);\n  const [tempOtherVideoSource, setTempOtherVideoSource] = useState(\"\");\n  const [tempYoutubeVideoSource, setTempYoutubeVideoSource] = useState(\"\"); // const [videoSource,setVideoSource] = useState(\"\")\n\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Choose a file\");\n  const [uploadfile, setUploadfile] = useState({});\n  const [videoSource, setvideoSource] = useState(\"\");\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\");\n  const [videoId, setVideoId] = useState(\"\"); // useEffect(() => displayVideoContainer(), [loginUser]);\n  // https://www.youtube.com/embed/8YhAFBOSk1U\n  // https://www.w3schools.com/html/mov_bbb.mp4\n  // https://www.youtube.com/embed/FCUk7rIBBAE\n\n  function getTemporaryUrl(e) {\n    const video_Id = uuidv4();\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setVideoId(video_Id);\n    console.log(user);\n\n    switch (name) {\n      case \"videoSource\":\n        if (value.includes(\"youtu\")) {\n          handleYoutubeUrl(value);\n        } else {\n          setDisplayYouTubeVideo(\"none\");\n          setDisplayVideo(\"block\");\n          setTempOtherVideoSource(value);\n          setvideoSource(value);\n        }\n\n        break;\n\n      case \"fileUpload\":\n        const videoTypeIndex = 6;\n        const videoType = files[0].type.slice(videoTypeIndex);\n        setTempOtherVideoSource(URL.createObjectURL(files[0]));\n        setvideoSource(`/stream_videos/${video_Id}.${videoType}`);\n        setFile(files[0]);\n        setFileName(files[0].name.replace(`.${videoType}`, \"\")); // remove soon\n\n        setVideoTitle(files[0].name.replace(`.${videoType}`, \"\"));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleTitleInput(e) {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    setVideoTitle(value);\n  }\n\n  function handleYoutubeUrl(videoFromYoutube) {\n    setDisplayYouTubeVideo(\"block\");\n    setDisplayVideo(\"none\");\n\n    if (videoFromYoutube.includes(\"embed\") > 0) {\n      setvideoSource(videoFromYoutube);\n      return setTempYoutubeVideoSource(videoFromYoutube);\n    } else {\n      const urlParams = \"youtu.be/\";\n      const indexOfvideoId = videoFromYoutube.search(urlParams) + urlParams.length;\n      const youTubeVideoIdLength = 11;\n      const videoId = videoFromYoutube.substr(indexOfvideoId, youTubeVideoIdLength);\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\n      setvideoSource(videoUrl);\n      return setTempYoutubeVideoSource(videoUrl);\n    }\n  }\n\n  const handleUploadVideoDetails = async e => {\n    e.preventDefault();\n    const videoDetails = {\n      videoTitle,\n      videoSource,\n      videoId\n    };\n\n    try {\n      const response = axios.post(`/upload_video/video_details/${user.userName}/${user._id}`, videoDetails);\n\n      if (file) {\n        handleUploadVideoLocally(videoId);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    handleUpdataData(user._d, user.userName, true);\n  };\n\n  const handleUploadVideoLocally = async videoId => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(`/upload_video/${videoId}`, formData, {\n        headers: {\n          \"content-Type\": \"multipart/form-data\"\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = response.data;\n      setUploadfile({\n        fileName,\n        filePath\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.log(\"server-problem\");\n      } else {\n        console.log(err.response.status, 5000);\n      }\n    }\n  }; // uploadVideo = async (videoTitle, videoSource) => {\n  //   const videoId = uuidv4();\n  //   const userVideo = {\n  //     videoTitle,\n  //     videoSource,\n  //     videoId,\n  //   };\n  //   axios\n  //     .post(\n  //       `/upload_video/${this.state.user.userName}/${this.state.user._id}`,\n  //       userVideo\n  //     )\n  //     .then((response) => {\n  //       // console.log(response.data, \"videos\");\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3 my-3   videoUpload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUploadVideoDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoFrame\",\n          children: videoSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"video\", {\n                width: \"500\",\n                heigth: \"315\",\n                controls: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempOtherVideoSource,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: tempOtherVideoSource,\n                  type: \"video/ogg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), \"Your browser does not support HTML video.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: displayYouTubeVideo\n              },\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: tempYoutubeVideoSource,\n                title: \"YouTube video player\",\n                frameBorder: \"0\",\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), videoSource.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"videoSource\",\n              className: \"form-control\",\n              onChange: getTemporaryUrl,\n              placeholder: \"Enter video Url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"fileUpload\",\n              accept: \"video/mp4\",\n              onChange: getTemporaryUrl,\n              id: \"inputGroupFile02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), videoSource.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"required-video-details\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoTitle\",\n            onChange: handleTitleInput,\n            placeholder: \"Enter Video Title\",\n            value: videoTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" upload-video\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn-success \",\n            type: \"submit\",\n            children: \"UpLoad Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadVideos, \"5oTYAWRCGG0B7y6hSHzuWoOo2Y8=\");\n\n_c = UploadVideos;\nexport default UploadVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideos\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Node-js/projects/videostreamer/FrontEnd/src/routes/UploadVideosPage.jsx"],"names":["React","useState","useEffect","useContext","StateContext","Link","axios","v4","uuidv4","UploadVideos","handleUpdataData","user","tempOtherVideoSource","setTempOtherVideoSource","tempYoutubeVideoSource","setTempYoutubeVideoSource","file","setFile","fileName","setFileName","uploadfile","setUploadfile","videoSource","setvideoSource","videoTitle","setVideoTitle","displayVideo","setDisplayVideo","displayYouTubeVideo","setDisplayYouTubeVideo","videoId","setVideoId","getTemporaryUrl","e","video_Id","name","value","files","target","console","log","includes","handleYoutubeUrl","videoTypeIndex","videoType","type","slice","URL","createObjectURL","replace","handleTitleInput","videoFromYoutube","urlParams","indexOfvideoId","search","length","youTubeVideoIdLength","substr","videoUrl","handleUploadVideoDetails","preventDefault","videoDetails","response","post","userName","_id","handleUploadVideoLocally","err","_d","formData","FormData","append","headers","filePath","data","status","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction UploadVideos() {\r\n  const { handleUpdataData, user } = useContext(StateContext);\r\n  const [tempOtherVideoSource, setTempOtherVideoSource] = useState(\"\");\r\n  const [tempYoutubeVideoSource, setTempYoutubeVideoSource] = useState(\"\");\r\n  // const [videoSource,setVideoSource] = useState(\"\")\r\n  const [file, setFile] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"Choose a file\");\r\n  const [uploadfile, setUploadfile] = useState({});\r\n  const [videoSource, setvideoSource] = useState(\"\");\r\n  const [videoTitle, setVideoTitle] = useState(\"\");\r\n  const [displayVideo, setDisplayVideo] = useState(\"block\");\r\n  const [displayYouTubeVideo, setDisplayYouTubeVideo] = useState(\"none\");\r\nconst [videoId,setVideoId]=  useState(\"\");\r\n  // useEffect(() => displayVideoContainer(), [loginUser]);\r\n\r\n  // https://www.youtube.com/embed/8YhAFBOSk1U\r\n  // https://www.w3schools.com/html/mov_bbb.mp4\r\n  // https://www.youtube.com/embed/FCUk7rIBBAE\r\n\r\n  function getTemporaryUrl(e) {\r\nconst video_Id = uuidv4();   \r\n const { name, value, files } = e.target;\r\n  setVideoId(video_Id);\r\n\r\nconsole.log(user)\r\n\r\n    switch (name) {\r\n      case \"videoSource\":\r\n        if (value.includes(\"youtu\")) {\r\n          handleYoutubeUrl(value);\r\n        } else {\r\n          setDisplayYouTubeVideo(\"none\");\r\n          setDisplayVideo(\"block\");\r\n          setTempOtherVideoSource(value);\r\n          setvideoSource(value);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"fileUpload\":\r\n        const videoTypeIndex = 6\r\n        const videoType = files[0].type.slice(videoTypeIndex)\r\n        setTempOtherVideoSource(URL.createObjectURL(files[0]));\r\n        setvideoSource(`/stream_videos/${video_Id}.${videoType}`);\r\n        setFile(files[0]);\r\n        setFileName(files[0].name.replace(`.${videoType}`,\"\")); // remove soon\r\n         setVideoTitle(files[0].name.replace(`.${videoType}`,\"\"));\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleTitleInput(e) {\r\n    const { name, value, files } = e.target;\r\n\r\n    setVideoTitle(value);\r\n  }\r\n\r\n  function handleYoutubeUrl(videoFromYoutube) {\r\n    setDisplayYouTubeVideo(\"block\");\r\n    setDisplayVideo(\"none\");\r\n    if (videoFromYoutube.includes(\"embed\") > 0) {\r\n      setvideoSource(videoFromYoutube);\r\n\r\n      return setTempYoutubeVideoSource(videoFromYoutube);\r\n    } else {\r\n      const urlParams = \"youtu.be/\";\r\n      const indexOfvideoId =videoFromYoutube.search(urlParams) + urlParams.length;\r\n      const youTubeVideoIdLength = 11;\r\n      const videoId = videoFromYoutube.substr(indexOfvideoId, youTubeVideoIdLength);\r\n      const videoUrl = `https://www.youtube.com/embed/${videoId}`;\r\n      setvideoSource(videoUrl);\r\n\r\n      return setTempYoutubeVideoSource(videoUrl);\r\n    }\r\n  }\r\n\r\n  const handleUploadVideoDetails = async (e) => {\r\n    e.preventDefault();\r\n    const videoDetails = {\r\n      videoTitle,\r\n     videoSource,\r\n      videoId,\r\n    };\r\n        try {\r\n        const response = axios.post(\r\n          `/upload_video/video_details/${user.userName}/${user._id}`,\r\n          videoDetails\r\n        );\r\n\r\n    if (file) {\r\nhandleUploadVideoLocally (videoId)\r\n    } \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n\r\nhandleUpdataData(user._d,user.userName,true)\r\n\r\n  };\r\n\r\nconst handleUploadVideoLocally = async (videoId)=>{\r\n\r\n\r\n\r\n  const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n      try {\r\n        const response = await axios.post(\r\n          `/upload_video/${videoId}`,\r\n          formData , {\r\n                    headers: {\r\n                      \"content-Type\": \"multipart/form-data\",\r\n                    },\r\n                  }\r\n        );\r\n\r\n        const { fileName, filePath } = response.data;\r\n        setUploadfile({ fileName, filePath });\r\n      } catch (err) {\r\n        if (err.response.status === 500) {\r\n          console.log(\"server-problem\");\r\n        } else {\r\n          console.log(err.response.status,5000);\r\n        }\r\n      }\r\n} \r\n\r\n  // uploadVideo = async (videoTitle, videoSource) => {\r\n  //   const videoId = uuidv4();\r\n  //   const userVideo = {\r\n  //     videoTitle,\r\n  //     videoSource,\r\n  //     videoId,\r\n  //   };\r\n\r\n  //   axios\r\n  //     .post(\r\n  //       `/upload_video/${this.state.user.userName}/${this.state.user._id}`,\r\n  //       userVideo\r\n  //     )\r\n  //     .then((response) => {\r\n  //       // console.log(response.data, \"videos\");\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container p-3 my-3   videoUpload-container\">\r\n<h1>{videoId}</h1>\r\n        <form onSubmit={handleUploadVideoDetails}>\r\n          <div className=\"videoFrame\">\r\n            {videoSource.length > 0 && (\r\n              <div>\r\n                <div style={{ display: displayVideo }}>\r\n                  <video width=\"500\" heigth=\"315\" controls>\r\n                    <source src={tempOtherVideoSource} type=\"video/mp4\" />\r\n                    <source src={tempOtherVideoSource} type=\"video/ogg\" />\r\n                    Your browser does not support HTML video.\r\n                  </video>\r\n                </div>\r\n                <div style={{ display: displayYouTubeVideo }}>\r\n                  <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={tempYoutubeVideoSource}\r\n                    title=\"YouTube video player\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {videoSource.length <= 0 && (\r\n            <div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"videoSource\"\r\n                  className=\"form-control\"\r\n                  onChange={getTemporaryUrl}\r\n                  placeholder=\"Enter video Url\"\r\n                />\r\n              </div>\r\n\r\n              <br />\r\n              <span>Or</span>\r\n\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"fileUpload\"\r\n                  accept=\"video/mp4\"\r\n                  onChange={getTemporaryUrl}\r\n                  id=\"inputGroupFile02\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {videoSource.length > 0 && (\r\n            <div className=\"required-video-details\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"videoTitle\"\r\n                onChange={handleTitleInput}\r\n                placeholder=\"Enter Video Title\"\r\nvalue={videoTitle}\r\n              />\r\n              {/* <input type=\"text\"  name=\"videoType\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  />\r\n<input type=\"text\"  name=\"videoTitle\"  /> */}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\" upload-video\">\r\n            <button className=\" btn btn-success \" type=\"submit\">\r\n              UpLoad Video\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UploadVideos;\r\n"]},"metadata":{},"sourceType":"module"}